// Code generated by DIGEN; DO NOT EDIT.
// This file was generated by Dependency Injection Container Generator 0.0.3 (built at 2021-10-18T18:27:06Z).
// See docs at https://github.com/strider2038/digen

package definitions

import (
	"context"
	"github.com/gameap/daemon/internal/app/config"
	"github.com/gameap/daemon/internal/app/contracts"
	gameservercommands "github.com/gameap/daemon/internal/app/game_server_commands"
	"github.com/gameap/daemon/internal/app/services"
	"github.com/go-resty/resty/v2"
	"github.com/sirupsen/logrus"

	"github.com/gameap/daemon/internal/app/domain"
	gdaemonscheduler "github.com/gameap/daemon/internal/app/gdaemon_scheduler"
)

type Container interface {
	// SetError sets the first error into container. The error is used in the public container to return an initialization error.
	SetError(err error)

	Cfg(ctx context.Context) *config.Config
	Logger(ctx context.Context) *logrus.Logger
	ProcessRunner(ctx context.Context) *services.Runner
	CacheManager(ctx context.Context) contracts.Cache
	ServerCommandFactory(ctx context.Context) *gameservercommands.ServerCommandFactory

	Services() ServicesContainer
	Repositories() RepositoryContainer
}

type ServicesContainer interface {
	Resty(ctx context.Context) *resty.Client
	APICaller(ctx context.Context) contracts.APIRequestMaker
	Executor(ctx context.Context) contracts.Executor
	ExtendableExecutor(ctx context.Context) contracts.Executor
	GdTaskManager(ctx context.Context) *gdaemonscheduler.TaskManager
	ProcessManager(ctx context.Context) contracts.ProcessManager
}

type RepositoryContainer interface {
	GdTaskRepository(ctx context.Context) domain.GDTaskRepository
	ServerRepository(ctx context.Context) domain.ServerRepository
	ServerTaskRepository(ctx context.Context) domain.ServerTaskRepository
}
